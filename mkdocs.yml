site_name: Data Structures and Algorithms using Golang
nav:
    - Home: index.md
    - String:
        - String is Palindrom: string/palindrom.md
        - String is Pangram: string/pangram.md
        - Strign is Anagram: string/anagram.md
        - Word cound in paragraph: string/word_count.md
        - Max n Occurance of Word in Paragraph: string/max_word_n_count.md
        - All Permutation of A String: string/all_permutation.md
        - All subsequence of A string: string/subsequence.md
    - Arrays:
        - Introduction: array/intro.md
        - Operation in Array: array/operations.md
        - Largest Element in Array: array/largest_element.md
        - Second Largest Element in Array: array/second_largest_element.md
        - Check If Array is Sorted: array/is_array_sorted.md
        - Reverse an Array: array/reverse_array.md
        - Remove Duplicate from Sorted Array: array/remove_duplicates_from_sorted_array.md
        - Remove Duplicate from Unsorted Array: array/remove_duplicates_from_unsorted_array.md
        - Move All Zeroes to End: array/move_all_zeroes_to_end.md
        - Left Rotate Array by One: array/left_rotate_array_by_one.md
        - Left Rotate Array by d:  array/left_rotate_array_by_d.md
        - Leaders in Array: array/leaders_in_array.md
        - Maximum Difference: array/maximum_difference.md
        - Frequency in Sorted Array: array/frequency_sorted_array.md
        - Sum of All Pair in Sorted Array is Equal to Given Number: array/sum_of_all_pair_in_sorted_array_is_equal_to_given_number.md
        - Intersection of Two Sorted Array: array/intersection_of_two_sorted_array.md
    - Sorting:
        - Introduction: sorting/introduction.md
        - Bubble Sort: sorting/bubble_sort.md
        - Selection Sort: sorting/selection_sort.md
        - Insertion Sort: sorting/insertion_sort.md
        - Merge Sort: sorting/merge_sort.md
    - Linked List:
        - Delete Middle Element of Singly Linked List: linked_list/delete_middle_ele_linked_list.md
        - Reverse A Singly Linked List: linked_list/reserve_singly_linked_list.md
        - Add One in Lisked List Digit: linked_list/add_one_linked_list_digit.md
    - Concurrency:
        - Print Odd and Even Sequentially using goroutine: concurrency/print_odd_even_sequentially.md
    - Binary Search Tree:
        - Second Largest Number from Given Number: bst/second_largest_number_from_given_number.md
    - About: about.md
theme: readthedocs
